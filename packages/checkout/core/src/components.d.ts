/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { PlugCheckoutFormCustomStyleFormClasses, PlugCheckoutFormValues, PlugCheckoutInstallmentsConfig, PlugCheckoutOneShotError, PlugCheckoutOneShotSuccess } from "./components/plug-checkout/plug-checkout.types";
export namespace Components {
    interface PlugCheckout {
        "amount": number;
        "capture": boolean;
        "clientId": string;
        "customFormStyleClasses"?: PlugCheckoutFormCustomStyleFormClasses;
        "installmentsConfig": PlugCheckoutInstallmentsConfig;
        "merchantId": string;
        "publicKey": string;
        "sandbox": boolean;
        "statementDescriptor": string;
    }
    interface PlugCheckoutForm {
        "amount": number;
        "customFormStyleClasses": PlugCheckoutFormCustomStyleFormClasses;
        "formValues": PlugCheckoutFormValues;
        "installmentsConfig": PlugCheckoutInstallmentsConfig;
        "isLoading": boolean;
    }
    interface PlugPayments {
    }
}
declare global {
    interface HTMLPlugCheckoutElement extends Components.PlugCheckout, HTMLStencilElement {
    }
    var HTMLPlugCheckoutElement: {
        prototype: HTMLPlugCheckoutElement;
        new (): HTMLPlugCheckoutElement;
    };
    interface HTMLPlugCheckoutFormElement extends Components.PlugCheckoutForm, HTMLStencilElement {
    }
    var HTMLPlugCheckoutFormElement: {
        prototype: HTMLPlugCheckoutFormElement;
        new (): HTMLPlugCheckoutFormElement;
    };
    interface HTMLPlugPaymentsElement extends Components.PlugPayments, HTMLStencilElement {
    }
    var HTMLPlugPaymentsElement: {
        prototype: HTMLPlugPaymentsElement;
        new (): HTMLPlugPaymentsElement;
    };
    interface HTMLElementTagNameMap {
        "plug-checkout": HTMLPlugCheckoutElement;
        "plug-checkout-form": HTMLPlugCheckoutFormElement;
        "plug-payments": HTMLPlugPaymentsElement;
    }
}
declare namespace LocalJSX {
    interface PlugCheckout {
        "amount"?: number;
        "capture"?: boolean;
        "clientId"?: string;
        "customFormStyleClasses"?: PlugCheckoutFormCustomStyleFormClasses;
        "installmentsConfig"?: PlugCheckoutInstallmentsConfig;
        "merchantId"?: string;
        "onPaymentFailed"?: (event: CustomEvent<{ error: PlugCheckoutOneShotError }>) => void;
        "onPaymentSuccess"?: (event: CustomEvent<{ data: PlugCheckoutOneShotSuccess }>) => void;
        "publicKey"?: string;
        "sandbox"?: boolean;
        "statementDescriptor"?: string;
    }
    interface PlugCheckoutForm {
        "amount"?: number;
        "customFormStyleClasses"?: PlugCheckoutFormCustomStyleFormClasses;
        "formValues"?: PlugCheckoutFormValues;
        "installmentsConfig"?: PlugCheckoutInstallmentsConfig;
        "isLoading"?: boolean;
        "onFieldChange"?: (event: CustomEvent<{ field: string; value: string }>) => void;
        "onFormSubmit"?: (event: CustomEvent<void>) => void;
    }
    interface PlugPayments {
    }
    interface IntrinsicElements {
        "plug-checkout": PlugCheckout;
        "plug-checkout-form": PlugCheckoutForm;
        "plug-payments": PlugPayments;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "plug-checkout": LocalJSX.PlugCheckout & JSXBase.HTMLAttributes<HTMLPlugCheckoutElement>;
            "plug-checkout-form": LocalJSX.PlugCheckoutForm & JSXBase.HTMLAttributes<HTMLPlugCheckoutFormElement>;
            "plug-payments": LocalJSX.PlugPayments & JSXBase.HTMLAttributes<HTMLPlugPaymentsElement>;
        }
    }
}
